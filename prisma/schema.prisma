// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  username      String?   @unique
  image         String?

  CoursesOwnedByUser Course[]
  OrdersPlaced       Order[]
  Review             Review[]
}

model Course {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Decimal  @db.Decimal(12, 2)
  creatorId   String
  createdAt   DateTime @default(now())
  views       Int      @default(0)
  rating      Float    @default(0)

  priceId         String
  stripeProductId String

  Orders           Order[]
  UsersOwnedCourse User[]

  Chapters    Chapter[]
  SubChapters SubChapter[]

  ChapterIdsOrder String[]

  Categories Category[]

  Reviews Review[]
  Photos  Photo[]
}

model Chapter {
  id   String @id @default(cuid())
  name String

  SubChapterIdsOrder String[]

  Course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@index([courseId])
}

model SubChapter {
  id   String @id @default(cuid())
  name String

  Course   Course @relation(fields: [courseId], references: [id])
  courseId String

  Video   Video?  @relation(fields: [videoId], references: [id])
  videoId String?

  @@index([courseId])
  @@index([videoId])
}

model Order {
  id        String      @id @default(cuid())
  total     Decimal     @db.Decimal(12, 2)
  currency  String
  status    OrderStatus
  createdAt DateTime    @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  CoursesInOrder Course[]

  @@index([userId])
}

enum OrderStatus {
  CREATED
  PAID
  CANCELLED
  REFUNDED
}

model Video {
  id         String       @id @default(cuid())
  key        String       @unique
  fileName   String
  url        String
  
  SubChapter SubChapter[]
}

model Photo {
  id  String @id @default(cuid())
  key String @unique
  fileName   String
  url String

  isMainPhoto Boolean @default(false)

  Courses Course[]
}

model Category {
  id   String @id @default(cuid())
  name String
  slug String @unique

  Courses Course[]
}

model Review {
  id      String  @id @default(cuid())
  rating  Int
  title   String?
  comment String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@index([userId])
  @@index([courseId])
}
